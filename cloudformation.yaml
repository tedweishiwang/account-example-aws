AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda with DynamoDB backend

Parameters:
  S3Bucket:
    Type: String
    Default: my-account-lambda-code-bucket
  S3Key:
    Type: String
    Default: create_account.zip

Resources:
  AccountTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: account
      AttributeDefinitions:
        - AttributeName: account_id
          AttributeType: S
      KeySchema:
        - AttributeName: account_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaDynamoDBAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                Resource: !GetAtt AccountTable.Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  CreateAccountLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: CreateAccount
      Runtime: python3.12
      Handler: create_account.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3Key
      Environment:
        Variables:
          TABLE_NAME: account
      Timeout: 10
